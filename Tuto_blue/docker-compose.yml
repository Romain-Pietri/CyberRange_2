services:
 # guacd
  guacd:
    container_name: guacd_compose
    image: guacamole/guacd
    networks:
      - guacnetwork_compose
    restart: always
    volumes:
    - ./drive:/drive:rw
    - ./record:/record:rw
    ports:
      - 4822:4822/tcp
  # postgres
  postgres:
    container_name: postgres_guacamole_compose
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: guacamole_db
      POSTGRES_PASSWORD: 'ChooseYourOwnPasswordHere1234'
      POSTGRES_USER: guacamole_user
    image: postgres:15.2-alpine
    networks:
      - guacnetwork_compose
    restart: always
    volumes:
      - ./init:/docker-entrypoint-initdb.d:z
      - ./data:/var/lib/postgresql/data:Z
    ports:
      - 5432:5432/tcp

  # guacamole
  guacamole:
    container_name: guacamole_compose
    group_add:
      - "1000"
    depends_on:
      - guacd
      - postgres
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PASSWORD: 'ChooseYourOwnPasswordHere1234'
      POSTGRES_USER: guacamole_user
      RECORDING_SEARCH_PATH: /record
    image: guacamole/guacamole
    networks:
      - guacnetwork_compose
    volumes:
      - ./record:/record:rw
    ports:
## enable next line if not using nginx
      - 8080:8080/tcp # Guacamole is on :8080/guacamole, not /.
## enable next line when using nginx
    ##- 8080/tcp
    restart: always

  ssh-server:
    build: ./ssh_server
    container_name: ssh_server
    privileged: true
    ports:
      - "2222:22"
    networks:
      - labnet
    volumes:
      - ssh_logs:/var/log # Partage des logs SSH avec un volume nommé

  attacker:
    build: ./attacker
    container_name: attacker
    depends_on:
      - ssh-server
    networks:
      - labnet

  kali_blue1:
    build:
      context: .
      dockerfile: Dockerfile.kali_blue
    container_name: kali-blue1
    ports:
      - "3389:3389"
    privileged: true 
    networks:
      - labnet
      - guacnetwork_compose
  kali_blue2:
    build:
      context: .
      dockerfile: Dockerfile.kali_blue
    container_name: kali-blue2
    ports:
      - "3390:3389"
    privileged: true 
    networks:
      - labnet
      - guacnetwork_compose
    
  kali_blue3:
    build:
      context: .
      dockerfile: Dockerfile.kali_blue
    container_name: kali-blue3
    ports:
      - "3391:3389"
    privileged: true 
    networks:
      - labnet
      - guacnetwork_compose

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - labnet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - labnet

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.10.2
    container_name: filebeat
    user: root
    command: ["--strict.perms=false"]
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ssh_logs:/var/log # Accès aux logs partagés
    depends_on:
      - elasticsearch
    networks:
      - labnet

networks:
  labnet:
    driver: bridge
  guacnetwork_compose:
    driver: bridge

volumes:
  ssh_logs: